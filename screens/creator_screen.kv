<CreatorScreen>:
    canvas.before:
        Color:
            rgba: rgba("#101319")
        Rectangle:
            pos: self.pos
            size: self.size
    BoxLayout:
        orientation: 'vertical'

        MDTopAppBar:
            canvas:
                Color:
                    rgba: rgba("#1E232E")
                Rectangle:
                    pos: self.pos
                    size: self.size
#            title: "Navigation Drawer"
            elevation: 10
            id: top_app_bar
#            left_action_items: [['menu', lambda x: app.root.ids.nav_drawer.set_state("open")]]
#            on_action_button: app.callback(self.icon)
#            md_bg_color: rgba("#1E232E")  # ?

            RelativeLayout:
                MDIconButton:
                    icon: "menu"
                    on_press: app.root.ids.nav_drawer.set_state("open")
                    pos_hint: {"x": 0, "center_y": 1}

                MDLabel:
                    text: "DEMIURG"
                    font_name: "Monoton"
                    font_size: dp(40)
                    pos_hint: {"x": 0.8, "center_y": 1}

                MDRectangleFlatIconButton:
                    text: "Home"
                    icon: "chevron-left"
                    line_color: 0, 0, 0, 0
                    pos_hint: {"center_x": .1, "center_y": 1}
                    font_name: "Nunito"
                    text_color: 1, 1, 1, 1
                    font_size: dp(20)
                    on_press: app.root.ids.screen_manager.current = "menu"

                MDTextButton:
                    text: "File"
                    pos_hint: {"center_x": .2, "center_y": 1}
                    font_name: "Nunito"
                    text_color: 1, 1, 1, 1
                    font_size: dp(20)

                Label:
                    pos_hint: {"center_x": .5, "center_y": 1}
                    text: "Project title"
                    font_size: dp(30)
                    font_name: "Nunito"

        Widget:  # needed for top bar to stay at the top

    RelativeLayout:
        canvas:
            Color:
                rgba: rgba("#1E232E")
            Rectangle:
                pos: self.pos
                size: self.size
        pos_hint: {"center_x": 0.05, "y": 0}
        size_hint: 0.1, None
        height: root.height - top_app_bar.height

        MDIconButton:
            icon: "map-outline"
            pos_hint: {"center_x": 0.5, "center_y": 0.8}
            font_size: dp(80)
            on_press: location_menu.change
        Label:
            font_name: "Nunito"
            pos_hint: {"center_x": 0.5, "center_y": 0.74}
            text: "Locations"
            font_size: dp(20)

#    LocationMenu:
#        id: location_menu
#        size_hint: 0.1, None
#        height: root.height - top_app_bar.height
#        pos_hint: {"x": -0.5, "y": 0}  # it's hidden, can be showed with button

    FloatLayout:
        id: content
        pos_hint: {"center_x": 0.5, "center_y": 0.5}
        size_hint: 0.6, 1

    Grid:
        id: grid
        pos_hint: {"x": 0.1, "y": 0}
        size_hint: 0.9, None
        height: root.height - top_app_bar.height

        CardButton:
            pos: 110, grid.height - 110
            grid: grid
            on_release: print(self.size); print(self.pos)


#    RelativeLayout:
#        canvas:
#            Color:
#                rgba: 0.09, 0.09, 0.09, 1
#            Rectangle:
#                pos: self.pos
#                size: self.size
#
#        pos_hint: {"center_x": 0.9, "center_y": 0.5}
#        size_hint: 0.2, 1
#
#        cols: 1
#
#        MDLabel:
#            pos_hint: {"center_x": 0.5, "center_y": 0.9}
#            text: "Options"
#            color: "white"
#            halign: "center"
#            font_size: dp(35)
#
#        MDLabel:
#            pos_hint: {"center_x": 0.5, "center_y": 0.75}
#            text: "Name"
#            color: "white"
#            halign: "center"
#
#        MDTextField:
#            pos_hint: {"center_x": 0.5, "center_y": 0.7}
#            size_hint_x: 0.5
#            on_text: root.on_text(self.text)
#            id: input
#            disabled: True


